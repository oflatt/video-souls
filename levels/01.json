{
  "video": "xi6fSPv7M18",
  "title": "Zombie",
  "arrowless": false,
  "bossDamageMultiplier": 2,
  "bossHealth": 3.5,
  "attackData": [
    {
      "time": 6.653170117011701,
      "direction": 0,
      "damage": 0.1
    },
    {
      "time": 11.081739999999987,
      "direction": 0,
      "damage": 0.1
    },
    {
      "time": 11.953170117011712,
      "direction": 0,
      "damage": 0.1
    },
    {
      "time": 17.153170117011722,
      "direction": 2,
      "damage": 0.1
    },
    {
      "time": 19.803170117011724,
      "direction": 2,
      "damage": 0.1
    },
    {
      "time": 23.40317011701176,
      "direction": 0,
      "damage": 0.1
    },
    {
      "time": 27.353170117011782,
      "direction": 0,
      "damage": 0.1
    },
    {
      "time": 28.40317011701179,
      "direction": 0,
      "damage": 0.1
    },
    {
      "time": 29.503170117011805,
      "direction": 6,
      "damage": 0.1
    },
    {
      "time": 32.78521199999998,
      "direction": 0,
      "damage": 0.1
    }
  ],
  "attackIntervals": {
    "__type": "Map",
    "entries": [
      [
        "3",
        {
          "start": 15.897653465346536,
          "end": 21.140854185418544,
          "name": "3"
        }
      ],
      [
        "4",
        {
          "start": 21.140854185418544,
          "end": 25.812680468046807,
          "name": "4"
        }
      ],
      [
        "death",
        {
          "start": 34.719399639964,
          "end": 37.40822052205221,
          "name": "death"
        }
      ],
      [
        "5",
        {
          "start": 25.879900990099014,
          "end": 34.58495859585959,
          "name": "5"
        }
      ],
      [
        "intro",
        {
          "start": 0,
          "end": 5.209590459045906,
          "name": "intro"
        }
      ],
      [
        "1",
        {
          "start": 5.579303330333034,
          "end": 15.90694339898161,
          "name": "1"
        }
      ]
    ]
  },
  "criticals": [],
  "attackSchedule": "\nreturn function(state) {\n  // Check if current interval is completed (reached the end time)\n  var currentInterval = state.availableIntervals[state.currentInterval];\n\n  // Check if we've reached or passed the end time of the current interval\n  if (state.currentTime >= currentInterval.end) {\n    // Pick a random attack interval, but interval '5' is half as likely\n    var intervals = state.intervalNamesAlpha.slice();\n    var weighted = [];\n    for (var i = 0; i < intervals.length; i++) {\n      if (intervals[i] === \"5\") {\n        weighted.push(\"5\"); // only one entry for '5'\n      } else {\n        weighted.push(intervals[i]);\n        weighted.push(intervals[i]); // double entry for others\n      }\n    }\n    var randomIndex = Math.floor(Math.random() * weighted.length);\n    var nextInterval = weighted[randomIndex];\n    return {\n      continueNormal: false,\n      transitionToInterval: nextInterval,\n      intervalOffset: 0\n    };\n  }\n  // Continue with current behavior\n  return { continueNormal: true };\n};",
  "version": "0.0.0"
}